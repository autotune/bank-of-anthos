import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a DigitalOcean Container Registry resource. A Container Registry is
 * a secure, private location to store your containers for rapid deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * // Create a new container registry
 * const foobar = new digitalocean.ContainerRegistry("foobar", {subscriptionTierSlug: "starter"});
 * ```
 *
 * ## Import
 *
 * Container Registries can be imported using the `name`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/containerRegistry:ContainerRegistry myregistry registryname
 * ```
 */
export declare class ContainerRegistry extends pulumi.CustomResource {
    /**
     * Get an existing ContainerRegistry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerRegistryState, opts?: pulumi.CustomResourceOptions): ContainerRegistry;
    /**
     * Returns true if the given object is an instance of ContainerRegistry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContainerRegistry;
    /**
     * The date and time when the registry was created
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The URL endpoint of the container registry. Ex: `registry.digitalocean.com/my_registry`
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * The name of the container_registry
     */
    readonly name: pulumi.Output<string>;
    /**
     * The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The domain of the container registry. Ex: `registry.digitalocean.com`
     */
    readonly serverUrl: pulumi.Output<string>;
    /**
     * The amount of storage used in the registry in bytes.
     */
    readonly storageUsageBytes: pulumi.Output<number>;
    /**
     * The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
     */
    readonly subscriptionTierSlug: pulumi.Output<string>;
    /**
     * Create a ContainerRegistry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerRegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ContainerRegistry resources.
 */
export interface ContainerRegistryState {
    /**
     * The date and time when the registry was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The URL endpoint of the container registry. Ex: `registry.digitalocean.com/my_registry`
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The name of the container_registry
     */
    name?: pulumi.Input<string>;
    /**
     * The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
     */
    region?: pulumi.Input<string>;
    /**
     * The domain of the container registry. Ex: `registry.digitalocean.com`
     */
    serverUrl?: pulumi.Input<string>;
    /**
     * The amount of storage used in the registry in bytes.
     */
    storageUsageBytes?: pulumi.Input<number>;
    /**
     * The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
     */
    subscriptionTierSlug?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ContainerRegistry resource.
 */
export interface ContainerRegistryArgs {
    /**
     * The name of the container_registry
     */
    name?: pulumi.Input<string>;
    /**
     * The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
     */
    region?: pulumi.Input<string>;
    /**
     * The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
     */
    subscriptionTierSlug: pulumi.Input<string>;
}
