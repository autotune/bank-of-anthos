import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a DigitalOcean database resource. When creating a new database cluster, a default database with name `defaultdb` will be created. Then, this resource can be used to provide additional database inside the cluster.
 *
 * ## Example Usage
 * ### Create a new PostgreSQL database
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const postgres_example = new digitalocean.DatabaseCluster("postgres-example", {
 *     engine: "pg",
 *     version: "11",
 *     size: "db-s-1vcpu-1gb",
 *     region: "nyc1",
 *     nodeCount: 1,
 * });
 * const database_example = new digitalocean.DatabaseDb("database-example", {clusterId: postgres_example.id});
 * ```
 *
 * ## Import
 *
 * Database can be imported using the `id` of the source database cluster and the `name` of the database joined with a comma. For example
 *
 * ```sh
 *  $ pulumi import digitalocean:index/databaseDb:DatabaseDb database-example 245bcfd0-7f31-4ce6-a2bc-475a116cca97,foobar
 * ```
 */
export declare class DatabaseDb extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseDb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseDbState, opts?: pulumi.CustomResourceOptions): DatabaseDb;
    /**
     * Returns true if the given object is an instance of DatabaseDb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseDb;
    /**
     * The ID of the original source database cluster.
     */
    readonly clusterId: pulumi.Output<string>;
    /**
     * The name for the database.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a DatabaseDb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseDbArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseDb resources.
 */
export interface DatabaseDbState {
    /**
     * The ID of the original source database cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The name for the database.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseDb resource.
 */
export interface DatabaseDbArgs {
    /**
     * The ID of the original source database cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The name for the database.
     */
    name?: pulumi.Input<string>;
}
