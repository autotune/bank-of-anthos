"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSpacesBucketObjectOutput = exports.getSpacesBucketObject = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Spaces object data source allows access to the metadata and
 * _optionally_ (see below) content of an object stored inside a Spaces bucket.
 *
 * > **Note:** The content of an object (`body` field) is available only for objects which have a human-readable
 * `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially
 * downloading large amount of data which would be thrown away in favor of metadata.
 *
 * ## Example Usage
 *
 * The following example retrieves a text object (which must have a `Content-Type`
 * value starting with `text/`) and uses it as the `userData` for a Droplet:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const bootstrapScript = digitalocean.getSpacesBucketObject({
 *     bucket: "ourcorp-deploy-config",
 *     region: "nyc3",
 *     key: "droplet-bootstrap-script.sh",
 * });
 * const web = new digitalocean.Droplet("web", {
 *     image: "ubuntu-18-04-x64",
 *     region: "nyc2",
 *     size: "s-1vcpu-1gb",
 *     userData: bootstrapScript.then(bootstrapScript => bootstrapScript.body),
 * });
 * ```
 */
function getSpacesBucketObject(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getSpacesBucketObject:getSpacesBucketObject", {
        "bucket": args.bucket,
        "key": args.key,
        "range": args.range,
        "region": args.region,
        "versionId": args.versionId,
    }, opts);
}
exports.getSpacesBucketObject = getSpacesBucketObject;
/**
 * The Spaces object data source allows access to the metadata and
 * _optionally_ (see below) content of an object stored inside a Spaces bucket.
 *
 * > **Note:** The content of an object (`body` field) is available only for objects which have a human-readable
 * `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially
 * downloading large amount of data which would be thrown away in favor of metadata.
 *
 * ## Example Usage
 *
 * The following example retrieves a text object (which must have a `Content-Type`
 * value starting with `text/`) and uses it as the `userData` for a Droplet:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const bootstrapScript = digitalocean.getSpacesBucketObject({
 *     bucket: "ourcorp-deploy-config",
 *     region: "nyc3",
 *     key: "droplet-bootstrap-script.sh",
 * });
 * const web = new digitalocean.Droplet("web", {
 *     image: "ubuntu-18-04-x64",
 *     region: "nyc2",
 *     size: "s-1vcpu-1gb",
 *     userData: bootstrapScript.then(bootstrapScript => bootstrapScript.body),
 * });
 * ```
 */
function getSpacesBucketObjectOutput(args, opts) {
    return pulumi.output(args).apply((a) => getSpacesBucketObject(a, opts));
}
exports.getSpacesBucketObjectOutput = getSpacesBucketObjectOutput;
//# sourceMappingURL=getSpacesBucketObject.js.map