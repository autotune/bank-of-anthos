import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a [DigitalOcean Monitoring](https://docs.digitalocean.com/reference/api/api-reference/#tag/Monitoring)
 * resource. Monitor alerts can be configured to alert about, e.g., disk or memory
 * usage exceeding a certain threshold or traffic at a certain limit. Notifications
 * can be sent to either an email address or a Slack channel.
 *
 * > **Note** Currently, the [DigitalOcean API](https://docs.digitalocean.com/reference/api/api-reference/#operation/create_alert_policy) only supports creating alerts for Droplets.
 *
 * ## Import
 *
 * Monitor alerts can be imported using the monitor alert `uuid`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/monitorAlert:MonitorAlert cpu_alert b8ecd2ab-2267-4a5e-8692-cbf1d32583e3
 * ```
 */
export declare class MonitorAlert extends pulumi.CustomResource {
    /**
     * Get an existing MonitorAlert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitorAlertState, opts?: pulumi.CustomResourceOptions): MonitorAlert;
    /**
     * Returns true if the given object is an instance of MonitorAlert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MonitorAlert;
    /**
     * How to send notifications about the alerts. This is a list with one element, .
     * Note that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can
     * read more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)
     */
    readonly alerts: pulumi.Output<outputs.MonitorAlertAlerts>;
    /**
     * The comparison for `value`.
     * This may be either `GreaterThan` or `LessThan`.
     */
    readonly compare: pulumi.Output<string>;
    /**
     * The description of the alert.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The status of the alert.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * A list of IDs for the resources to which the alert policy applies.
     */
    readonly entities: pulumi.Output<string[] | undefined>;
    /**
     * A list of tags. When an included tag is added to a resource, the alert policy will apply to it.
     */
    readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The type of the alert.
     * This may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,
     * `v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,
     * `v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,
     * `v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,
     * `v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,
     * `v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,
     * `v1/insights/lbaas/droplet_health`, `v1/insights/lbaas/tls_connections_per_second_utilization_percent`,
     * `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`,
     * `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`,
     * `v1/insights/lbaas/high_http_request_response_time`, `v1/insights/lbaas/high_http_request_response_time_50p`,
     * `v1/insights/lbaas/high_http_request_response_time_95p`, `v1/insights/lbaas/high_http_request_response_time_99p`,
     * `v1/dbaas/alerts/load_15_alerts`, `v1/dbaas/alerts/cpu_alerts`, `v1/dbaas/alerts/memory_utilization_alerts`, or
     * `v1/dbaas/alerts/disk_utilization_alerts`.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The uuid of the alert.
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.
     * DigitalOcean will show the correct unit in the web panel.
     */
    readonly value: pulumi.Output<number>;
    /**
     * The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.
     */
    readonly window: pulumi.Output<string>;
    /**
     * Create a MonitorAlert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitorAlertArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MonitorAlert resources.
 */
export interface MonitorAlertState {
    /**
     * How to send notifications about the alerts. This is a list with one element, .
     * Note that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can
     * read more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)
     */
    alerts?: pulumi.Input<inputs.MonitorAlertAlerts>;
    /**
     * The comparison for `value`.
     * This may be either `GreaterThan` or `LessThan`.
     */
    compare?: pulumi.Input<string>;
    /**
     * The description of the alert.
     */
    description?: pulumi.Input<string>;
    /**
     * The status of the alert.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of IDs for the resources to which the alert policy applies.
     */
    entities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of tags. When an included tag is added to a resource, the alert policy will apply to it.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the alert.
     * This may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,
     * `v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,
     * `v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,
     * `v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,
     * `v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,
     * `v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,
     * `v1/insights/lbaas/droplet_health`, `v1/insights/lbaas/tls_connections_per_second_utilization_percent`,
     * `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`,
     * `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`,
     * `v1/insights/lbaas/high_http_request_response_time`, `v1/insights/lbaas/high_http_request_response_time_50p`,
     * `v1/insights/lbaas/high_http_request_response_time_95p`, `v1/insights/lbaas/high_http_request_response_time_99p`,
     * `v1/dbaas/alerts/load_15_alerts`, `v1/dbaas/alerts/cpu_alerts`, `v1/dbaas/alerts/memory_utilization_alerts`, or
     * `v1/dbaas/alerts/disk_utilization_alerts`.
     */
    type?: pulumi.Input<string>;
    /**
     * The uuid of the alert.
     */
    uuid?: pulumi.Input<string>;
    /**
     * The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.
     * DigitalOcean will show the correct unit in the web panel.
     */
    value?: pulumi.Input<number>;
    /**
     * The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.
     */
    window?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MonitorAlert resource.
 */
export interface MonitorAlertArgs {
    /**
     * How to send notifications about the alerts. This is a list with one element, .
     * Note that for Slack, the DigitalOcean app needs to have permissions for your workspace. You can
     * read more in [Slack's documentation](https://slack.com/intl/en-dk/help/articles/222386767-Manage-app-installation-settings-for-your-workspace)
     */
    alerts: pulumi.Input<inputs.MonitorAlertAlerts>;
    /**
     * The comparison for `value`.
     * This may be either `GreaterThan` or `LessThan`.
     */
    compare: pulumi.Input<string>;
    /**
     * The description of the alert.
     */
    description: pulumi.Input<string>;
    /**
     * The status of the alert.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of IDs for the resources to which the alert policy applies.
     */
    entities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of tags. When an included tag is added to a resource, the alert policy will apply to it.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the alert.
     * This may be one of `v1/insights/droplet/load_1`, `v1/insights/droplet/load_5`, `v1/insights/droplet/load_15`,
     * `v1/insights/droplet/memory_utilization_percent`, `v1/insights/droplet/disk_utilization_percent`,
     * `v1/insights/droplet/cpu`, `v1/insights/droplet/disk_read`, `v1/insights/droplet/disk_write`,
     * `v1/insights/droplet/public_outbound_bandwidth`, `v1/insights/droplet/public_inbound_bandwidth`,
     * `v1/insights/droplet/private_outbound_bandwidth`, `v1/insights/droplet/private_inbound_bandwidth`,
     * `v1/insights/lbaas/avg_cpu_utilization_percent`, `v1/insights/lbaas/connection_utilization_percent`,
     * `v1/insights/lbaas/droplet_health`, `v1/insights/lbaas/tls_connections_per_second_utilization_percent`,
     * `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`,
     * `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`, `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`,
     * `v1/insights/lbaas/high_http_request_response_time`, `v1/insights/lbaas/high_http_request_response_time_50p`,
     * `v1/insights/lbaas/high_http_request_response_time_95p`, `v1/insights/lbaas/high_http_request_response_time_99p`,
     * `v1/dbaas/alerts/load_15_alerts`, `v1/dbaas/alerts/cpu_alerts`, `v1/dbaas/alerts/memory_utilization_alerts`, or
     * `v1/dbaas/alerts/disk_utilization_alerts`.
     */
    type: pulumi.Input<string>;
    /**
     * The value to start alerting at, e.g., 90% or 85Mbps. This is a floating-point number.
     * DigitalOcean will show the correct unit in the web panel.
     */
    value: pulumi.Input<number>;
    /**
     * The time frame of the alert. Either `5m`, `10m`, `30m`, or `1h`.
     */
    window: pulumi.Input<string>;
}
