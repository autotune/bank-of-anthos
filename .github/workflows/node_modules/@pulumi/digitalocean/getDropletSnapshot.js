"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDropletSnapshotOutput = exports.getDropletSnapshot = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Droplet snapshots are saved instances of a Droplet. Use this data
 * source to retrieve the ID of a DigitalOcean Droplet snapshot for use in other
 * resources.
 *
 * ## Example Usage
 *
 * Get the Droplet snapshot:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const web-snapshot = digitalocean.getDropletSnapshot({
 *     mostRecent: true,
 *     nameRegex: "^web",
 *     region: "nyc3",
 * });
 * ```
 *
 * Create image from snapshot:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const web-snapshot = digitalocean.getDropletSnapshot({
 *     nameRegex: "^web",
 *     region: "nyc3",
 *     mostRecent: true,
 * });
 * const from_snapshot = new digitalocean.Droplet("from-snapshot", {
 *     image: web_snapshot.then(web_snapshot => web_snapshot.id),
 *     region: "nyc3",
 *     size: "s-2vcpu-4gb",
 * });
 * ```
 */
function getDropletSnapshot(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getDropletSnapshot:getDropletSnapshot", {
        "mostRecent": args.mostRecent,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "region": args.region,
    }, opts);
}
exports.getDropletSnapshot = getDropletSnapshot;
/**
 * Droplet snapshots are saved instances of a Droplet. Use this data
 * source to retrieve the ID of a DigitalOcean Droplet snapshot for use in other
 * resources.
 *
 * ## Example Usage
 *
 * Get the Droplet snapshot:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const web-snapshot = digitalocean.getDropletSnapshot({
 *     mostRecent: true,
 *     nameRegex: "^web",
 *     region: "nyc3",
 * });
 * ```
 *
 * Create image from snapshot:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const web-snapshot = digitalocean.getDropletSnapshot({
 *     nameRegex: "^web",
 *     region: "nyc3",
 *     mostRecent: true,
 * });
 * const from_snapshot = new digitalocean.Droplet("from-snapshot", {
 *     image: web_snapshot.then(web_snapshot => web_snapshot.id),
 *     region: "nyc3",
 *     size: "s-2vcpu-4gb",
 * });
 * ```
 */
function getDropletSnapshotOutput(args, opts) {
    return pulumi.output(args).apply((a) => getDropletSnapshot(a, opts));
}
exports.getDropletSnapshotOutput = getDropletSnapshotOutput;
//# sourceMappingURL=getDropletSnapshot.js.map