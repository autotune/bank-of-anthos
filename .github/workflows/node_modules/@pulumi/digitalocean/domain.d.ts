import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a DigitalOcean domain resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * // Create a new domain
 * const _default = new digitalocean.Domain("default", {
 *     name: "example.com",
 *     ipAddress: digitalocean_droplet.foo.ipv4_address,
 * });
 * ```
 *
 * ## Import
 *
 * Domains can be imported using the `domain name`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/domain:Domain mydomain mytestdomain.com
 * ```
 */
export declare class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain;
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Domain;
    /**
     * The uniform resource name of the domain
     */
    readonly domainUrn: pulumi.Output<string>;
    /**
     * The IP address of the domain. If specified, this IP
     * is used to created an initial A record for the domain.
     */
    readonly ipAddress: pulumi.Output<string | undefined>;
    /**
     * The name of the domain
     */
    readonly name: pulumi.Output<string>;
    /**
     * The TTL value of the domain
     */
    readonly ttl: pulumi.Output<number>;
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * The uniform resource name of the domain
     */
    domainUrn?: pulumi.Input<string>;
    /**
     * The IP address of the domain. If specified, this IP
     * is used to created an initial A record for the domain.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name of the domain
     */
    name?: pulumi.Input<string>;
    /**
     * The TTL value of the domain
     */
    ttl?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The IP address of the domain. If specified, this IP
     * is used to created an initial A record for the domain.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name of the domain
     */
    name: pulumi.Input<string>;
}
