import * as pulumi from "@pulumi/pulumi";
/**
 * Provides the CA certificate for a DigitalOcean database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const ca = digitalocean.getDatabaseCa({
 *     clusterId: "aaa-bbb-ccc-ddd",
 * });
 * export const caOutput = ca.then(ca => ca.certificate);
 * ```
 */
export declare function getDatabaseCa(args: GetDatabaseCaArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseCaResult>;
/**
 * A collection of arguments for invoking getDatabaseCa.
 */
export interface GetDatabaseCaArgs {
    /**
     * The ID of the source database cluster.
     */
    clusterId: string;
}
/**
 * A collection of values returned by getDatabaseCa.
 */
export interface GetDatabaseCaResult {
    /**
     * The CA certificate used to secure database connections decoded to a string.
     */
    readonly certificate: string;
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * Provides the CA certificate for a DigitalOcean database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const ca = digitalocean.getDatabaseCa({
 *     clusterId: "aaa-bbb-ccc-ddd",
 * });
 * export const caOutput = ca.then(ca => ca.certificate);
 * ```
 */
export declare function getDatabaseCaOutput(args: GetDatabaseCaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseCaResult>;
/**
 * A collection of arguments for invoking getDatabaseCa.
 */
export interface GetDatabaseCaOutputArgs {
    /**
     * The ID of the source database cluster.
     */
    clusterId: pulumi.Input<string>;
}
